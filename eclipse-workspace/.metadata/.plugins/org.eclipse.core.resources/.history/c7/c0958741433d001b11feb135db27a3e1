import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;

public class DbConn {
	String ConnString = "jdbc:mysql://db509it.cdqlst5meygv.us-east-1.rds.amazonaws.com/HarrisContactDb";
	String username = "admin";
	String password = "Cultivate01!";
	Connection conn = null;
	
	public DbConn()
	{
		try {
			conn = DriverManager.getConnection(ConnString, username, password);
			System.out.println("Connected to Database");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("Not Connected");
		}
		
	}
	public ResultSet getPContacts() 
	{
		ResultSet setResult = null;
		String sql = "CALL selectPersonalContacts();";
		try {
			CallableStatement callStatement = conn.prepareCall(sql);
			setResult = callStatement.executeQuery();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return setResult;
	}
	
	public void insertPContacts(
			String firstName,
			String lastName,
			String cEmail,
			String cNumber,
			String pNumber,
			String fAddress,
			String sAddress,
			String city,
			String postcode
			)
	{
		
		String sql = "CALL insertIntoPersonal(?,?,?,?,?,?,?,?,?);";
		try {
			CallableStatement callStatement = conn.prepareCall(sql);
			callStatement.setString(1, firstName);
			callStatement.setString(2, lastName);
			callStatement.setString(3, cEmail);
			callStatement.setString(4, cNumber);
			callStatement.setString(5, pNumber);
			callStatement.setString(6, fAddress);
			callStatement.setString(7, sAddress);
			callStatement.setString(8, city);
			callStatement.setString(9, postcode);
			ResultSet setResult = callStatement.executeQuery();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		

	}
	
	public void updatePContacts(
			String firstName, 
			String lastName,
			String cEmail,
			String cNumber,
			String pNumber, 
			String fAddress,
			String sAddress, 
			String city,
			String postcode,
			String id)
	{

		String sql = "CALL updatePersonalContacts(?,?,?,?,?,?,?,?,?,?);";
		try {
			CallableStatement callStatement = conn.prepareCall(sql);
			callStatement.setString(1, id);
			callStatement.setString(2, firstName);
			callStatement.setString(3, lastName);
			callStatement.setString(4, cEmail);
			callStatement.setString(5, cNumber);
			callStatement.setString(6, pNumber);
			callStatement.setString(7, fAddress);
			callStatement.setString(8, sAddress);
			callStatement.setString(9, city);
			callStatement.setString(10, postcode);
			
			ResultSet setResult = callStatement.executeQuery();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		
		
	}
	
	public void deletePConacts(String id) 
	{
		String sql = "CALL deletePersonalContacts(?);";
		try {
			CallableStatement callStatement = conn.prepareCall(sql);
			callStatement.setString(1, id);
			ResultSet setResult = callStatement.executeQuery();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	
}
